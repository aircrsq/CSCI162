david@david-EP121:~/CSCI162/Lab6$ gprolog
GNU Prolog 1.3.0
By Daniel Diaz
Copyright (C) 1999-2007 Daniel Diaz
| ?- [family].
compiling /home/david/CSCI162/Lab6/family.pl for byte code...
/home/david/CSCI162/Lab6/family.pl compiled, 13 lines read - 1788 bytes written, 17 ms

yes
| ?- parent(hank,denise).

yes
| ?- parent(denise,hank).

no
| ?- grandparent(irene,frank).

true ? p
Action (; for next solution, a for all solutions, RET to stop) ? a

no
| ?- parent(hank,X).

X = ben ? ;

X = denise

yes
| ?- grandparent(hank,X).

X = carl ? ;

X = frank ? ;

X = gary

yes
| ?- 

david@david-EP121:~/CSCI162/Lab6$ gprolog
GNU Prolog 1.3.0
By Daniel Diaz
Copyright (C) 1999-2007 Daniel Diaz
| ?- [family].
compiling /home/david/CSCI162/Lab6/family.pl for byte code...
/home/david/CSCI162/Lab6/family.pl compiled, 13 lines read - 1788 bytes written, 19 ms

yes
| ?- 
Prolog interruption (h for help) ? h
   a  abort        b  break
   c  continue     e  exit
   d  debug        t  trace
  h/? help

Prolog interruption (h for help) ? t
The debugger will first creep -- showing everything (trace)
| ?- grandparent(hank,X).
      1    1  Call: grandparent(hank,_17) ? 
      2    2  Call: parent(hank,_86) ? 
      2    2  Exit: parent(hank,ben) ? 
      3    2  Call: parent(ben,_17) ? 
      3    2  Exit: parent(ben,carl) ? 
      1    1  Exit: grandparent(hank,carl) ? 

X = carl ? ;
      1    1  Redo: grandparent(hank,carl) ? 
      2    2  Redo: parent(hank,ben) ? 
      2    2  Exit: parent(hank,denise) ? 
      3    2  Call: parent(denise,_17) ? 
      3    2  Exit: parent(denise,frank) ? 
      1    1  Exit: grandparent(hank,frank) ? 

X = frank ? ;
      1    1  Redo: grandparent(hank,frank) ? 
      3    2  Redo: parent(denise,frank) ? 
      3    2  Exit: parent(denise,gary) ? 
      1    1  Exit: grandparent(hank,gary) ? 

X = gary

(4 ms) yes
{trace}
| ?- 

